package org.dinamizadores.dinaeventos.model;
// Generated 13-jun-2016 11:45:19 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.ColumnResult;
import javax.persistence.ConstructorResult;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.Lob;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.SqlResultSetMappings;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.dinamizadores.dinaeventos.dto.DdGenerico;
import org.dinamizadores.dinaeventos.dto.EntradasTiempoDTO;
import org.dinamizadores.dinaeventos.dto.EventoDTO;
import org.dinamizadores.dinaeventos.dto.TipoVentaBasico;

/**
 * Evento generated by hbm2java
 */
@SqlResultSetMappings({
	@SqlResultSetMapping(
			name = "Evento2EventoDTO",
			classes = {
					@ConstructorResult(targetClass = EventoDTO.class,
					columns = {@ColumnResult(name="entradasTotales"),
							   @ColumnResult(name="entradasVendidas"),
							   @ColumnResult(name="entradasValidadasPapel"),
							   @ColumnResult(name="entradasOnline"),
							   @ColumnResult(name="ingresosTotales"),
							   @ColumnResult(name="numHombres"),
							   @ColumnResult(name="numMujeres")
					})
			}
		),
	@SqlResultSetMapping(
			name = "getEntradasTiempoDTO",
			classes = {
					@ConstructorResult(targetClass = EntradasTiempoDTO.class,
					columns = {@ColumnResult(name="cantidad"),
							   @ColumnResult(name="fecha")
					})
			}
		),
	@SqlResultSetMapping(
			name = "getLugaresDeOrigen",
			classes = {
					@ConstructorResult(targetClass = DdGenerico.class,
					columns = {@ColumnResult(name="cantidad"),
							   @ColumnResult(name="descripcion"),
							   @ColumnResult(name="id")
					})
			}
		),
	@SqlResultSetMapping(
			name = "getTiposEntradaVendidas",
			classes = {
					@ConstructorResult(targetClass = DdGenerico.class,
					columns = {@ColumnResult(name="cantidad"),
							   @ColumnResult(name="descripcion")
					})
			}
		),
	@SqlResultSetMapping(
			name = "getIngresosPorTiempo",
			classes = {
					@ConstructorResult(targetClass = EntradasTiempoDTO.class,
					columns = {@ColumnResult(name="precio"),
							   @ColumnResult(name="fecha")
					})
			}
		),
	@SqlResultSetMapping(
			name = "getTiposVentaBasico",
			classes = {
					@ConstructorResult(targetClass = TipoVentaBasico.class,
					columns = {@ColumnResult(name="precio"),
							   @ColumnResult(name="cantidad")
					})
			}
		)
})

@Entity
@Table(name = "evento", catalog = "jbossforge")
public class Evento implements java.io.Serializable {

	private static final long serialVersionUID = -1044399576691985644L;
	private int idevento;
	private String nombre;
	private String nombreLugar;
	private String direccion;
	private Date fechaIni;
	private Date fechaFin;
	private byte[] logo;
	private String logoNombre;
	private String descripcion;
	private int aforo;
	private Integer latitud;
	private Integer longitud;
	private Integer entradasDisponibles;
	private Integer idcodigopostal;
	private GlobalCodigospostales codigoPostal;
	private Integer idtipoevento;
	private DdTipoEvento ddTipoEvento;
	private Integer idorganizador;
	private Organizadores organizador;
	private Date fechaAlta;
	private Boolean activo;
	private String nombreOrganizador;
	private String descripcionOrganizador;
	private String emailContacto;
	private Set<RrppJefes> rrppJefes = new HashSet<RrppJefes>(0);
	private Set<DdTipoEntrada> ddTipoEntradas = new HashSet<DdTipoEntrada>(0);
    private Set<DdTipoComplemento> ddTipoComplementos = new HashSet<DdTipoComplemento>(0);
    private Set<Patrocinadores> patrocinadores = new HashSet<Patrocinadores>(0);
    private Set<Entrada> entradas = new HashSet<Entrada>(0);
	
	public Evento() {
	}

	public Evento(int idevento, String nombre, Date fechaIni, Date fechaFin,
			int aforo) {
		this.idevento = idevento;
		this.nombre = nombre;
		this.fechaIni = fechaIni;
		this.fechaFin = fechaFin;
		this.aforo = aforo;
	}
	public Evento(int idevento, String nombre, String nombreLugar,
			String direccion, Date fechaIni, Date fechaFin, byte[] logo,
			String descripcion, int aforo, Integer latitud, Integer longitud,
			Integer entradasDisponibles, Integer idcodigopostal,
			Integer idtipoevento, Integer idorganizador, Date fechaAlta,
			Boolean acitvo) {
		this.idevento = idevento;
		this.nombre = nombre;
		this.nombreLugar = nombreLugar;
		this.direccion = direccion;
		this.fechaIni = fechaIni;
		this.fechaFin = fechaFin;
		this.logo = logo;
		this.descripcion = descripcion;
		this.aforo = aforo;
		this.latitud = latitud;
		this.longitud = longitud;
		this.entradasDisponibles = entradasDisponibles;
		this.idcodigopostal = idcodigopostal;
		this.idtipoevento = idtipoevento;
		this.idorganizador = idorganizador;
		this.fechaAlta = fechaAlta;
		this.activo = acitvo;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "idevento", unique = true, nullable = false)
	public int getIdevento() {
		return this.idevento;
	}

	public void setIdevento(int idevento) {
		this.idevento = idevento;
	}

	@Column(name = "nombre", nullable = false, length = 255)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "nombrelugar", length = 255)
	public String getNombreLugar() {
		return this.nombreLugar;
	}

	public void setNombreLugar(String nombreLugar) {
		this.nombreLugar = nombreLugar;
	}

	@Column(name = "direccion", length = 255)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_ini", nullable = false, length = 19)
	public Date getFechaIni() {
		return this.fechaIni;
	}

	public void setFechaIni(Date fechaIni) {
		this.fechaIni = fechaIni;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_fin", nullable = false, length = 19)
	public Date getFechaFin() {
		return this.fechaFin;
	}

	public void setFechaFin(Date fechaFin) {
		this.fechaFin = fechaFin;
	}

	@Lob
	@Column(name = "logo")
	public byte[] getLogo() {
		return this.logo;
	}

	public void setLogo(byte[] logo) {
		this.logo = logo;
	}
	
	@Column(name = "logonombre")
	public String getLogoNombre() {
		return logoNombre;
	}

	public void setLogoNombre(String logoNombre) {
		this.logoNombre = logoNombre;
	}

	@Column(name = "descripcion", length = 1000)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "aforo", nullable = false)
	public int getAforo() {
		return this.aforo;
	}

	public void setAforo(int aforo) {
		this.aforo = aforo;
	}

	@Column(name = "latitud")
	public Integer getLatitud() {
		return this.latitud;
	}

	public void setLatitud(Integer latitud) {
		this.latitud = latitud;
	}

	@Column(name = "longitud")
	public Integer getLongitud() {
		return this.longitud;
	}

	public void setLongitud(Integer longitud) {
		this.longitud = longitud;
	}

	@Column(name = "entradas_disponibles")
	public Integer getEntradasDisponibles() {
		return this.entradasDisponibles;
	}

	public void setEntradasDisponibles(Integer entradasDisponibles) {
		this.entradasDisponibles = entradasDisponibles;
	}

	@Column(name = "idcodigopostal")
	public Integer getIdcodigopostal() {
		return this.idcodigopostal;
	}

	public void setIdcodigopostal(Integer idcodigopostal) {
		this.idcodigopostal = idcodigopostal;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcodigopostal", insertable = false, updatable = false)
	public GlobalCodigospostales getCodigoPostal() {
		return codigoPostal;
	}

	public void setCodigoPostal(GlobalCodigospostales codigoPostal) {
		this.codigoPostal = codigoPostal;
	}

	@Column(name = "idtipoevento")
	public Integer getIdtipoevento() {
		return this.idtipoevento;
	}

	public void setIdtipoevento(Integer idtipoevento) {
		this.idtipoevento = idtipoevento;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idtipoevento", insertable = false, updatable = false)
	@Transient
    public DdTipoEvento getDdTipoEvento() {
        return this.ddTipoEvento;
    }
    
    public void setDdTipoEvento(DdTipoEvento ddTipoEvento) {
        this.ddTipoEvento = ddTipoEvento;
    }	

	@Column(name = "idorganizador")
	public Integer getIdorganizador() {
		return this.idorganizador;
	}

	public void setIdorganizador(Integer idorganizador) {
		this.idorganizador = idorganizador;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idorganizador", insertable = false, updatable = false)
	@Transient
    public Organizadores getOrganizador() {
        return this.organizador;
    }
    
    public void setOrganizador(Organizadores organizadores) {
        this.organizador = organizadores;
    }

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", length = 19)
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@Column(name = "activo")
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}
	
	
	@Column(name = "nombre_organizador")
	public String getNombreOrganizador() {
		return nombreOrganizador;
	}

	public void setNombreOrganizador(String nombreOrganizador) {
		this.nombreOrganizador = nombreOrganizador;
	}

	@Column(name = "descripcion_organizador")
	public String getDescripcionOrganizador() {
		return descripcionOrganizador;
	}

	public void setDescripcionOrganizador(String descripcionOrganizador) {
		this.descripcionOrganizador = descripcionOrganizador;
	}
	
	@Column(name = "email_contacto")
	public String getEmailContacto() {
		return emailContacto;
	}

	public void setEmailContacto(String emailContacto) {
		this.emailContacto = emailContacto;
	}

	@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="dd_rrpp_evento", catalog="jbossforge", joinColumns = { 
        @JoinColumn(name="idevento", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idrrpp", nullable=false, updatable=false) })
    public Set<RrppJefes> getRrppJefes() {
        return this.rrppJefes;
    }
    
    public void setRrppJefes(Set<RrppJefes> rrppJefeses) {
        this.rrppJefes = rrppJefeses;
    }
    
    @OneToMany(fetch=FetchType.LAZY, mappedBy="evento")
    public Set<DdTipoEntrada> getDdTipoEntradas() {
        return this.ddTipoEntradas;
    }
    
    public void setDdTipoEntradas(Set<DdTipoEntrada> ddTipoEntradas) {
        this.ddTipoEntradas = ddTipoEntradas;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="evento") 
    public Set<DdTipoComplemento> getDdTipoComplementos() {
        return this.ddTipoComplementos;
    }
    
    public void setDdTipoComplementos(Set<DdTipoComplemento> ddTipoComplementos) {
        this.ddTipoComplementos = ddTipoComplementos;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="evento")
    public Set<Patrocinadores> getPatrocinadores() {
        return this.patrocinadores;
    }
    
    public void setPatrocinadores(Set<Patrocinadores> patrocinadores) {
        this.patrocinadores = patrocinadores;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="evento")
    public Set<Entrada> getEntradas() {
        return this.entradas;
    }
    
    public void setEntradas(Set<Entrada> entradas) {
        this.entradas = entradas;
    }


}
