package org.dinamizadores.dinaeventos.model;
// Generated 06-jun-2016 19:44:44 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Evento generated by hbm2java
 */
@Entity
@Table(name = "evento", catalog = "jbossforge")
@XmlRootElement
public class Evento implements java.io.Serializable {

	private static final long serialVersionUID = 6094521533319399867L;
	private int idevento;
	private DdTipoEvento ddTipoEvento;
	private GlobalCodigopostal globalCodigopostal;
	private Organizador organizador;
	private String nombre;
	private String nombrelugar;
	private String direccion;
	private Date fechaIni;
	private Date fechaFin;
	private byte[] logo;
	private String descripcion;
	private int aforo;
	private int latitud;
	private int longitud;
	private Integer entradasDisponibles;
	private Date fechaAlta;
	private Set<RrppJefe> rrppJefes = new HashSet<RrppJefe>(0);
	private Set<Entrada> entradas = new HashSet<Entrada>(0);
	private Set<Patrocinador> patrocinadors = new HashSet<Patrocinador>(0);

	public Evento() {
	}

	public Evento(int idevento, DdTipoEvento ddTipoEvento,
			GlobalCodigopostal globalCodigopostal, Organizador organizador,
			String nombre, Date fechaIni, Date fechaFin, int aforo,
			int latitud, int longitud) {
		this.idevento = idevento;
		this.ddTipoEvento = ddTipoEvento;
		this.globalCodigopostal = globalCodigopostal;
		this.organizador = organizador;
		this.nombre = nombre;
		this.fechaIni = fechaIni;
		this.fechaFin = fechaFin;
		this.aforo = aforo;
		this.latitud = latitud;
		this.longitud = longitud;
	}
	public Evento(int idevento, DdTipoEvento ddTipoEvento,
			GlobalCodigopostal globalCodigopostal, Organizador organizador,
			String nombre, String nombrelugar, String direccion, Date fechaIni,
			Date fechaFin, byte[] logo, String descripcion, int aforo,
			int latitud, int longitud, Integer entradasDisponibles,
			Date fechaAlta, Set<RrppJefe> rrppJefes, Set<Entrada> entradas,
			Set<Patrocinador> patrocinadors) {
		this.idevento = idevento;
		this.ddTipoEvento = ddTipoEvento;
		this.globalCodigopostal = globalCodigopostal;
		this.organizador = organizador;
		this.nombre = nombre;
		this.nombrelugar = nombrelugar;
		this.direccion = direccion;
		this.fechaIni = fechaIni;
		this.fechaFin = fechaFin;
		this.logo = logo;
		this.descripcion = descripcion;
		this.aforo = aforo;
		this.latitud = latitud;
		this.longitud = longitud;
		this.entradasDisponibles = entradasDisponibles;
		this.fechaAlta = fechaAlta;
		this.rrppJefes = rrppJefes;
		this.entradas = entradas;
		this.patrocinadors = patrocinadors;
	}

	@Id @GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "idevento", unique = true, nullable = false)
	public int getIdevento() {
		return this.idevento;
	}

	public void setIdevento(int idevento) {
		this.idevento = idevento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipoevento", nullable = false)
	public DdTipoEvento getDdTipoEvento() {
		return this.ddTipoEvento;
	}

	public void setDdTipoEvento(DdTipoEvento ddTipoEvento) {
		this.ddTipoEvento = ddTipoEvento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcodigopostal", nullable = false)
	public GlobalCodigopostal getGlobalCodigopostal() {
		return this.globalCodigopostal;
	}

	public void setGlobalCodigopostal(GlobalCodigopostal globalCodigopostal) {
		this.globalCodigopostal = globalCodigopostal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idorganizador", nullable = false)
	public Organizador getOrganizador() {
		return this.organizador;
	}

	public void setOrganizador(Organizador organizador) {
		this.organizador = organizador;
	}

	@Column(name = "nombre", nullable = false, length = 75)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "nombrelugar", length = 60)
	public String getNombrelugar() {
		return this.nombrelugar;
	}

	public void setNombrelugar(String nombrelugar) {
		this.nombrelugar = nombrelugar;
	}

	@Column(name = "direccion", length = 100)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_ini", nullable = false, length = 19)
	public Date getFechaIni() {
		return this.fechaIni;
	}

	public void setFechaIni(Date fechaIni) {
		this.fechaIni = fechaIni;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_fin", nullable = false, length = 19)
	public Date getFechaFin() {
		return this.fechaFin;
	}

	public void setFechaFin(Date fechaFin) {
		this.fechaFin = fechaFin;
	}

	@Column(name = "logo")
	public byte[] getLogo() {
		return this.logo;
	}

	public void setLogo(byte[] logo) {
		this.logo = logo;
	}

	@Column(name = "descripcion", length = 140)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "aforo", nullable = false)
	public int getAforo() {
		return this.aforo;
	}

	public void setAforo(int aforo) {
		this.aforo = aforo;
	}

	@Column(name = "latitud", nullable = false)
	public int getLatitud() {
		return this.latitud;
	}

	public void setLatitud(int latitud) {
		this.latitud = latitud;
	}

	@Column(name = "longitud", nullable = false)
	public int getLongitud() {
		return this.longitud;
	}

	public void setLongitud(int longitud) {
		this.longitud = longitud;
	}

	@Column(name = "entradas_disponibles")
	public Integer getEntradasDisponibles() {
		return this.entradasDisponibles;
	}

	public void setEntradasDisponibles(Integer entradasDisponibles) {
		this.entradasDisponibles = entradasDisponibles;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_alta", length = 19)
	public Date getFechaAlta() {
		return this.fechaAlta;
	}

	public void setFechaAlta(Date fechaAlta) {
		this.fechaAlta = fechaAlta;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "rrpp_evento", catalog = "jbossforge", joinColumns = {@JoinColumn(name = "idevento", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "idrrpp", nullable = false, updatable = false)})
	public Set<RrppJefe> getRrppJefes() {
		return this.rrppJefes;
	}

	public void setRrppJefes(Set<RrppJefe> rrppJefes) {
		this.rrppJefes = rrppJefes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evento")
	public Set<Entrada> getEntradas() {
		return this.entradas;
	}

	public void setEntradas(Set<Entrada> entradas) {
		this.entradas = entradas;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "eventos")
	public Set<Patrocinador> getPatrocinadors() {
		return this.patrocinadors;
	}

	public void setPatrocinadors(Set<Patrocinador> patrocinadors) {
		this.patrocinadors = patrocinadors;
	}

}
