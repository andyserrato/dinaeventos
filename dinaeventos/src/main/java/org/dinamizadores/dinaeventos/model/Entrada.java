package org.dinamizadores.dinaeventos.model;
// Generated 06-jun-2016 19:44:44 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Entrada generated by hbm2java
 */
@Entity
@Table(name = "entrada", catalog = "jbossforge", uniqueConstraints = @UniqueConstraint(columnNames = "numeroserie"))
@XmlRootElement
public class Entrada implements java.io.Serializable {

	private static final long serialVersionUID = 5469731044159726220L;
	private int identrada;
	private DdFormapago ddFormapago;
	private DdOrigenEntrada ddOrigenEntrada;
	private DdTiposIva ddTiposIva;
	private Evento evento;
	private Tipoentrada tipoentrada;
	private Usuario usuario;
	private String numeroserie;
	private Boolean validada;
	private Boolean ticketgenerado;
	private Float precio;
	private Boolean activa;
	private Boolean dentroFuera;
	private Boolean vendida;
	private Set<RrppJefeHasEntrada> rrppJefeHasEntradas = new HashSet<RrppJefeHasEntrada>(
			0);

	public Entrada() {
	}

	public Entrada(int identrada, DdFormapago ddFormapago,
			DdOrigenEntrada ddOrigenEntrada, DdTiposIva ddTiposIva,
			Evento evento, Tipoentrada tipoentrada, Usuario usuario) {
		this.identrada = identrada;
		this.ddFormapago = ddFormapago;
		this.ddOrigenEntrada = ddOrigenEntrada;
		this.ddTiposIva = ddTiposIva;
		this.evento = evento;
		this.tipoentrada = tipoentrada;
		this.usuario = usuario;
	}
	public Entrada(int identrada, DdFormapago ddFormapago,
			DdOrigenEntrada ddOrigenEntrada, DdTiposIva ddTiposIva,
			Evento evento, Tipoentrada tipoentrada, Usuario usuario,
			String numeroserie, Boolean validada, Boolean ticketgenerado,
			Float precio, Boolean activa, Boolean dentroFuera, Boolean vendida,
			Set<RrppJefeHasEntrada> rrppJefeHasEntradas) {
		this.identrada = identrada;
		this.ddFormapago = ddFormapago;
		this.ddOrigenEntrada = ddOrigenEntrada;
		this.ddTiposIva = ddTiposIva;
		this.evento = evento;
		this.tipoentrada = tipoentrada;
		this.usuario = usuario;
		this.numeroserie = numeroserie;
		this.validada = validada;
		this.ticketgenerado = ticketgenerado;
		this.precio = precio;
		this.activa = activa;
		this.dentroFuera = dentroFuera;
		this.vendida = vendida;
		this.rrppJefeHasEntradas = rrppJefeHasEntradas;
	}

	@Id @GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "identrada", unique = true, nullable = false)
	public int getIdentrada() {
		return this.identrada;
	}

	public void setIdentrada(int identrada) {
		this.identrada = identrada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idformapago", nullable = false)
	public DdFormapago getDdFormapago() {
		return this.ddFormapago;
	}

	public void setDdFormapago(DdFormapago ddFormapago) {
		this.ddFormapago = ddFormapago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idorigen", nullable = false)
	public DdOrigenEntrada getDdOrigenEntrada() {
		return this.ddOrigenEntrada;
	}

	public void setDdOrigenEntrada(DdOrigenEntrada ddOrigenEntrada) {
		this.ddOrigenEntrada = ddOrigenEntrada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipoiva", nullable = false)
	public DdTiposIva getDdTiposIva() {
		return this.ddTiposIva;
	}

	public void setDdTiposIva(DdTiposIva ddTiposIva) {
		this.ddTiposIva = ddTiposIva;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idevento", nullable = false)
	public Evento getEvento() {
		return this.evento;
	}

	public void setEvento(Evento evento) {
		this.evento = evento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipoentrada", nullable = false)
	public Tipoentrada getTipoentrada() {
		return this.tipoentrada;
	}

	public void setTipoentrada(Tipoentrada tipoentrada) {
		this.tipoentrada = tipoentrada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "numeroserie", unique = true, length = 100)
	public String getNumeroserie() {
		return this.numeroserie;
	}

	public void setNumeroserie(String numeroserie) {
		this.numeroserie = numeroserie;
	}

	@Column(name = "validada")
	public Boolean getValidada() {
		return this.validada;
	}

	public void setValidada(Boolean validada) {
		this.validada = validada;
	}

	@Column(name = "ticketgenerado")
	public Boolean getTicketgenerado() {
		return this.ticketgenerado;
	}

	public void setTicketgenerado(Boolean ticketgenerado) {
		this.ticketgenerado = ticketgenerado;
	}

	@Column(name = "precio", precision = 12, scale = 0)
	public Float getPrecio() {
		return this.precio;
	}

	public void setPrecio(Float precio) {
		this.precio = precio;
	}

	@Column(name = "activa")
	public Boolean getActiva() {
		return this.activa;
	}

	public void setActiva(Boolean activa) {
		this.activa = activa;
	}

	@Column(name = "dentro_fuera")
	public Boolean getDentroFuera() {
		return this.dentroFuera;
	}

	public void setDentroFuera(Boolean dentroFuera) {
		this.dentroFuera = dentroFuera;
	}

	@Column(name = "vendida")
	public Boolean getVendida() {
		return this.vendida;
	}

	public void setVendida(Boolean vendida) {
		this.vendida = vendida;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entrada")
	public Set<RrppJefeHasEntrada> getRrppJefeHasEntradas() {
		return this.rrppJefeHasEntradas;
	}

	public void setRrppJefeHasEntradas(
			Set<RrppJefeHasEntrada> rrppJefeHasEntradas) {
		this.rrppJefeHasEntradas = rrppJefeHasEntradas;
	}

}
